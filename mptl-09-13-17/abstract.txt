Introduction and Theory

Jupyter Notebook (formerly iPython Notebook) is a web application to create and share code- and data-driven narratives that contain live code, visualizations, and marked-up text and equations. Teachers can write tutorials, and students can write professional, interactive reports. Accessible to students and scalable to professionals, Jupyter Notebook is ideal for both undergraduate research and for teaching physics with computational modeling, data visualization, collaborative computing, and reporting. Furthermore, the latest version of VPython runs in Jupyter Notebook.

Concept and Implementation

The 2016 AAPT UCTF Computational Physics Report titled "AAPT Recommendations for Computational Physics in the Undergraduate Physics Curriculum," provides recommendations that students learn computing skills and computational physics skills, including the ability to process data; represent data visually; prepare documents and presentations that are "authentic to the discipline;" translate a model into code; choose algorithms; debug, test, and validate code; and extract physical insight. To meet these goals, I recommend Jupyter Notebook. Jupyter enables students to weave a rich narrative with data and code. By writing in markdown or HTML, students can interlace hypertext, equations (typed in LaTeX), images, videos, pdfs, and other media with code written in Python, R, Julia, or other languages. The outcome is a digital story—or narrative.

It is essential to teach the computing and computational skills outlined in AAPT's report. However, it is equally essential to teach students how to tell a story—a computational narrative—using data analysis and/or simulations. When homework problems, exam problems or projects require data analysis or writing a computational model, Jupyter Notebook allows students to richly explain their solution or results, along with their data and code. Students doing research can fully describe their work, their assumptions, their tests and their algorithms. In their notebook, they can even link to relevant papers or sources, showing their understanding of the literature and giving credit to others' work, including code. By sharing notebooks on GitHub, students learn the power of collaboration as they become a contributor to the larger open-source community. Students and teachers can also use Jupyter for presentations. Jupyter enables the speaker to edit and run code in the presentation itself.

Objectives and Assessment

My objective is to teach students to use Jupyter Notebook for both research and coursework. In the first year, I teach students computational modeling using VPython at GlowScript.org. After students have experience in programming, I teach them Jupyter Notebook. In this presentation, I will demonstrate our use of Jupyter Notebook in homework problems and exam problems, laboratory experiments, and students’ research projects. I will also illustrate the positive impact of teaching computation on the growth of a physics program.
